naive grammar

exp     :                            
        | exp '+' term                  
        | exp '-' term
        | term                  
        ;
        
term    : term '*' factor               
        | term '/' factor               
        | factor
        
factor  : operand 
		| UnaryExp 		                         
        | '(' exp ')'
        |                    
        ;
        
UnaryExp: '-' factor

operand : NUMBER
		| IDENTIFIER 
        


factored, non-left-recursive grammar


<Exp> ::= <Term> <Exp'> 
<Exp'> ::= + <Exp> | - <Exp> | ε

<Term> ::= <Factor> <Term'> 
<Term'> ::= * <Term> | / <Term> | ε

<Factor> ::= x | y | ... | 
			( <Exp> ) | 
			- <Factor>

 or
 
   
<expr> -> <term> <term_tail>

<term_tail> -> <add_op> <term> <term_tail> | e

<term> -> <factor> <factor_tail>

<factor_tail> -> <mult_op> <factor> <factor_tail> | e

<factor> -> ( <expr> ) | - <factor>
          | identifier | unsigned_integer

<add_op> -> + | -

<mult_op> -> * | /